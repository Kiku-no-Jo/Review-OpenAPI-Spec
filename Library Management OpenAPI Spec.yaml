openapi: 3.0.1
info: 
  title: Library Management API
  description: API for managing books and authors in a library
  version: 1.0.0
servers:
 - url: https://www.hlibrary.com
   description: Production server
 - url: https://mock-server.swaggerhub.com


paths:
  /books:
    get:
      summary: Show a list of books
      description: Get all books or filter by "title" or/and by "releaseDate".
      parameters:
       - name: bookTitle
         in: query
         description: Filter by book's title
         schema:
          type: string
       - name: releaseDateFrom
         in: query
         description: Filter books released after this date (YYYY-MM-DD)
         schema:
          type: string
          format: date
       - name: releaseDateTo
         in: query
         description: Filter books released before this date (YYYY-MM-DD)
         schema:
          type: string
          format: date
      responses:
        '200':
          description: A list of all books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created
    put:
      summary: Update a book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'   
      responses:
        '200':
          description: Book updated
    delete:
      summary: Delete a book
      parameters:
        - name: bookID
          in: query
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Book deleted

  /authors:
    get: 
      summary: Retrieve a list of authors
      description: Get all authors or filter by "Name".
      parameters:
        - name: authorName
          in: query
          description: Filter by author's name
          schema:
            type: string
      responses:
        '200':
          description: A list of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    post:
      summary: Add a new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          description: Author created
    put:
      summary: Update an author 
      requestBody:
        required: true
        content:
          application/jsoon:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: Author updated
    delete:
      summary: Delete an author
      parameters:
        - name: authorID
          in: query
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Author deleted

components:
  schemas:
    Book:
      type: object
      properties:
        bookID:
          type: integer
        bookName:
          type: string
        authorName:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
    Author:
      type: object
      properties:
        authorID:
          type: integer
        authorName:
          type: string
        sex:
          type: string
          enum:
            - M
            - F  



      